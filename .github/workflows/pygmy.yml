name: pygmy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created
  schedule:
    - cron: "0 0 * * *"

jobs:
  basic:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '1.16'
      - name: Install
        run: go mod download
        env:
          GO111MODULE: on
      - name: Diff
        run: diff -u <(echo -n) <(gofmt -d $(find . -not -path "./vendor/*" -name "*.go"));
      - name: Vet
        run: go vet $(go list ./...);
      - name: Lint
        run: docker run --rm -v $(pwd):/app -w /app golangci/golangci-lint:v1.25.1 golangci-lint run -v
      - name: Build
        run: make build
      - name: Test
        run: go test -v ./...

#  windows:
#    runs-on: windows-2019
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-go@v2
#        with:
#          stable: 'false'
#          go-version: '1.16'
#      - name: Switch Docker daemon mode to Linux
#        run: Start-Process $Env:ProgramFiles\Docker\Docker\DockerCli.exe -ArgumentList "-SwitchLinuxEngine"
#      - name: Build
#        run: docker build -t pygmy.
#      - name: Run status command
#        run: builds/${PYGMY_PATH} --config examples/pygmy.basic.yml status;
#      - name: Run version command
#        run: builds/${PYGMY_PATH} --config examples/pygmy.basic.yml version;

  full:
    runs-on: ubuntu-18.04
    env:
      PYGMY_DOMAIN: docker.amazee.io
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          stable: 'false'
          go-version: '1.16'
        # Establish some SSH keys.
      - name: Setup SSH
        run: |
          eval $(ssh-agent);
          ssh-keygen -t rsa -q -f "$HOME/.ssh/id_rsa" -N "";
          ssh-keygen -t rsa -q -f "$HOME/.ssh/id_pwd" -N "passphrase";
          ssh-add;
          ssh-add -l;
      - name: Setup git
        run: git config --global url."https://github.com/".insteadOf "git@github.com:";
      - name: Install
        run: go mod download
        env:
          GO111MODULE: on
      - name: Install Lando
        run: |
          wget https://files.devwithlando.io/lando-stable.deb;
          sudo dpkg -i --ignore-depends=docker-ce lando-stable.deb;

      - name: Compile
        run: go build -o pygmy-linux-amd64

      - name: Basic test
        run: |
          ./pygmy-linux-amd64 pull;
          ./pygmy-linux-amd64 pull;
          ./pygmy-linux-amd64 status;
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml up;
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml status;
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml version;

      - name: Show pygmy image versions
        run: |
          docker ps -a --filter "label=pygmy.name"

      - name: Export configuration
        run: ./pygmy-linux-amd64 export -o ./exported-config.yml

      - name: Show configuration
        run: cat ./exported-config.yml

      - name: SSH Key test
        run: |
          ./pygmy-linux-amd64 addkey /home/runner/.ssh/id_rsa.pub;
          ./pygmy-linux-amd64 status;
          ./pygmy-linux-amd64 status | grep 'id_rsa';
          docker run --rm -i --volumes-from pygmy-ssh-agent uselagoon/php-7.4-cli /usr/bin/ssh-add -l | grep 'id_rsa';

      - name: Resolv file test
        run: |
          stat /usr/lib/systemd/resolved.conf.d/pygmy.site.conf;
          grep "127.0.0.1" /usr/lib/systemd/resolved.conf.d/pygmy.site.conf;
          grep "pygmy.site" /usr/lib/systemd/resolved.conf.d/pygmy.site.conf;

      - name: Test the pygmy-network for expected results
        run: |
          docker network inspect pygmy-network | jq '.[].Name' | grep "pygmy-network";
          docker network inspect pygmy-network | jq '.[].Containers' | jq '.[].Name' | grep "pygmy-haproxy";
          docker network inspect pygmy-network | jq '.[].Containers' | jq '.[].Name' | grep "pygmy-mailhog";
          docker network inspect pygmy-network | jq '.[].Containers' | jq '.[].Name' | grep "pygmy-portainer";
          docker network inspect pygmy-network | jq '.[].Containers' | jq '.[].IPv4Address';
          docker network inspect pygmy-network | jq '.[].Containers' | jq '.[].IPv4Address' | grep "10.99.99.";

      - name: Test for configured container tags.
        run: |
          docker inspect pygmy-dnsmasq   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect pygmy-dnsmasq   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect pygmy-dnsmasq   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
          docker inspect pygmy-haproxy   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect pygmy-haproxy   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect pygmy-haproxy   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
          docker inspect pygmy-portainer | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect pygmy-portainer | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect pygmy-portainer | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
          docker inspect pygmy-ssh-agent | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect pygmy-ssh-agent | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect pygmy-ssh-agent | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";
          docker inspect pygmy-mailhog   | jq '.[].Config.Labels["pygmy.hocuspocus"]'  | grep "42";
          docker inspect pygmy-mailhog   | jq '.[].Config.Labels["pygmy.abracadabra"]' | grep "1";
          docker inspect pygmy-mailhog   | jq '.[].Config.Labels["pygmy.opensesame"]'  | grep "correct";

      - name: Clone the official examples
        run: |
          git clone --recurse-submodules https://github.com/uselagoon/lagoon-examples.git

      - name: Drupal 9 Advanced
        run: |
          cd lagoon-examples/drupal9-advanced;
          docker-compose -p drupal9-advanced up -d;
          docker-compose -p drupal9-advanced exec -T cli composer install;
          sleep 5;
          curl --HEAD http://drupal9-example-advanced.pygmy.site;
          curl --HEAD http://drupal9-example-advanced.pygmy.site | grep "X-LAGOON";
          ../../pygmy-linux-amd64 --config ../../examples/pygmy.basic.yml status | grep '\- http://drupal9-example-advanced.pygmy.site';
          docker-compose -p drupal9-advanced down;
          docker-compose -p drupal9-advanced rm;
          cd ../../;

      - name: Drupal 9 Base
        run: |
          cd lagoon-examples/drupal9-base;
          docker-compose -p drupal-base up -d;
          docker-compose -p drupal-base exec -T cli composer install;
          sleep 5;
          curl --HEAD http://drupal9-base.pygmy.site;
          curl --HEAD http://drupal9-base.pygmy.site | grep "X-LAGOON";
          ../../pygmy-linux-amd64 --config ../../examples/pygmy.basic.yml status | grep '\- http://drupal9-base.pygmy.site';
          docker-compose -p drupal-base down;
          docker-compose -p drupal-base rm;
          cd ../../;

      - name: Drupal 9 Postgres
        run: |
          cd lagoon-examples/drupal9-postgres;
          docker-compose -p drupal-postgres up -d;
          docker-compose -p drupal-postgres exec -T cli composer install;
          sleep 5;
          curl --HEAD http://drupal9-postgres.pygmy.site;
          curl --HEAD http://drupal9-postgres.pygmy.site | grep "X-LAGOON";
          ../../pygmy-linux-amd64 --config ../../examples/pygmy.basic.yml status | grep '\- http://drupal9-postgres.pygmy.site';
          docker-compose -p drupal-postgres down;
          docker-compose -p drupal-postgres rm;
          cd ../../;

      - name: Node
        run: |
          cd lagoon-examples/node-example;
          npm install;
          docker-compose -p node up -d;
          curl --HEAD http://node.pygmy.site;
          curl --HEAD http://node.pygmy.site | grep "X-LAGOON";
          ../../pygmy-linux-amd64 --config ../../examples/pygmy.basic.yml status | grep '\- http://node.pygmy.site';
          docker-compose -p node down;
          docker-compose -p node rm;
          cd ../../;

      - name: Silverstripe Advanced
        run: |
          cd lagoon-examples/silverstripe-advanced;
          docker-compose -p silverstripe-advanced up -d;
          docker-compose -p silverstripe-advanced exec -T cli composer install;
          sleep 5;
          curl --HEAD http://ss.pygmy.site;
          # Temporarily, we will omit the failure for the X-LAGOON header.;
          curl --HEAD http://ss.pygmy.site | grep "X-LAGOON" || true;
          docker-compose -p silverstripe-advanced down;
          docker-compose -p silverstripe-advanced rm;
          cd ../../;

      - name: Silverstripe Simple
        run: |
          cd lagoon-examples/silverstripe-simple;
          docker-compose -p silverstripe-simple up -d;
          docker-compose -p silverstripe-simple exec -T cli composer install;
          sleep 5;
          curl --HEAD http://ss.pygmy.site;
          curl --HEAD http://ss.pygmy.site | grep "X-LAGOON";
          docker-compose -p silverstripe-simple down;
          docker-compose -p silverstripe-simple rm;
          cd ../../;

      - name: Wordpress Simple
        run: |
          cd lagoon-examples/wordpress-simple;
          docker-compose -p wordpress-simple up -d;
          docker-compose -p wordpress-simple exec -T cli composer install;
          sleep 5;
          curl --HEAD http://wordpress-example-simple.pygmy.site;
          curl --HEAD http://wordpress-example-simple.pygmy.site | grep "X-LAGOON";
          ../../pygmy-linux-amd64 --config ../../examples/pygmy.basic.yml status | grep '\- http://wordpress-example-simple.pygmy.site';
          docker-compose -p wordpress-simple down;
          docker-compose -p wordpress-simple rm;
          cd ../../;

      - name: Lando test - running Pygmy along-side Lando
        run: |
          cd lagoon-examples/drupal9-base;
          lando start || true;
          sleep 5;
          curl --HEAD http://drupal9-base.lndo.site:8000;
          curl --HEAD http://drupal9-base.lndo.site:8000 | grep "X-Lagoon";
          lando destroy -y;
          cd ../../;

      - name: Test the down command
        run: |
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml down | grep 'Successfully stopped pygmy';
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml status | grep '\[ \] pygmy-' | grep 'is not running';
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml status | grep 'Running as container pygmy-' && false || true;
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml up;
          ./pygmy-linux-amd64 --config examples/pygmy.basic.yml status | grep 'Running as container pygmy-' && true || false;

      - name: Cowsay test
        run: ./pygmy-linux-amd64 --config examples/pygmy.basic.yml up | grep 'holy ship' || true;

      - name: Cleanup pygmy
        run: ./pygmy-linux-amd64 clean;

      - name: Cleanup after tests.
        run: | 
          docker system prune --all --force
          docker volume prune --force
